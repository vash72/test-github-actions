name: Master Build
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1

      - name: NodeJS 12.x
        uses: actions/setup-node@v1 #this installs node and npm for us
        with:
          node-version: "12.x"

      # - name: Cache node modules
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      # - name: Install node_modules
      #   run: npm install

      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: /usr/local/share/.cache/yarn/v4
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # - name: Linting
      #   run: npm run lint

      # - name: Build for production
      #   run: npm run build:prod

      - name: Install node_modules
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install # will run `yarn install` command

      - name: Get cache dir
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: cache dir # will run `yarn install` command

      - name: Build for production
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: build:prod # will run `yarn build` command
